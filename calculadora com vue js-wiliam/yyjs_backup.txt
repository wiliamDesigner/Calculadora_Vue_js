<script setup>

document.addEventListener('DOMContentLoaded', () => {
    // Seleciona o campo e o botão
    const numero1Input = document.getElementById('numero-1');
    const numero2Input =document.getElementById('numero-2');
    const operacaoSelect = document.getElementById('selecao'); // Seleciona o campo de operações
    const capturarBtn = document.getElementById('capturar');
    const resultadoInput=document.getElementById('resultado');


    capturarBtn.addEventListener('click', (event) => {
        event.preventDefault(); // Impede o comportamento padrão do botão

        // Pega o valor digitado no campo
        const numero1 = parseFloat(numero1Input.value); // aqui eu estou convertendo o valor de string para uma float
        const numero2 = parseFloat(numero2Input.value);// mesma coisa do de cima
        const operacao = operacaoSelect.value; // Captura a operação selecionada

        

        //criar uma função normal que calcula e depois criar um arrow function disso
        
        function calcular(numero1,numero2,operacao){
            
            let resultado;
            
         

            switch(operacao){
                case "+":
                    resultado=numero1+numero2;
                    console.log(`Wiliam sua conta deu ${resultado}`)
                    break;
                case "-":
                    resultado=numero1-numero2;
                    console.log(`wiliam sua conta deu ${resultado}`);
                    break;
                    case "*":
                        resultado=numero1*numero2;
                        console.log(`Wiliam sua conta deu ${resultado}`)
                        break;
                    case "/":
                        resultado=numero1/numero2;
                        console.log(`wiliam sua conta deu ${resultado}`);
                        break;
                default:
                    console.log("Nnenhuma operação válida foi escolhida");
                    break;   
                    
                    //colocar os outros calculos e depois colocar em um formulario onde ira aparecer na tela o resultado
            }
            if (typeof resultado === "number") {
                resultadoInput.value = resultado.toFixed(2); // Exibe com 2 casas decimais
            } else {
                resultadoInput.value = resultado; // Exibe mensagens de erro ou inválidas
            }
        }

        

        // Exibe no console
        console.log(`O número digitado foi: ${numero1}`);
        console.log(`O número digitado foi: ${numero2}`);
        console.log(`A  operação escolhida foi:${operacao}`);
        

        calcular(numero1,numero2,operacao);
    });
});



</script>

    <template>

    <div>
        <div class="calculadora">
        <form @submit.prevent="calcular">
        <div>
            <label for="numero-1">Número 1:</label>
            <input type="number" id="numero-1" v-model.number="numero1" />
        </div>

        <div>
            <label for="numero-2">Número 2:</label>
            <input type="number" id="numero-2" v-model.number="numero2" />
        </div>

        <div>
            <label for="selecao">Operação:</label>
            <select id="selecao" v-model="operacao">
            <option value="+">+</option>
            <option value="-">-</option>
            <option value="*">*</option>
            <option value="/">/</option>
            </select>
        </div>

        <button type="submit" id="capturar">Calcular</button>
        </form>

        <div>
        <label for="resultado" id="">Resultado:</label>
        <input type="text" id="resultado" :value="resultado" readonly />
        </div>
    </div>

    </div>

    </template>

    <style scoped>

body {
    font-family: 'Arial', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    color: 
}


div.calculadora {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column; 
    width: 100%; 
    max-width: 400px; 
    margin-top: 210px; 
    margin-left: 700px;
}


form {
    background-color: rgba(255, 255, 255, 0.9); 
    padding: 25px;
    border-radius: 12px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); 
    width: 100%; 
    color: #333333; 
    text-align: center; /* Centraliza o texto */
    display: flex;
    flex-direction: column; /* Organiza os elementos em coluna */
    align-items: center; /* Centraliza horizontalmente */
}

/* Controle de cada campo do formulário */
.form-control {
    display: flex;
    flex-direction: column;
    margin-bottom: 20px;
    width: 100%; /* Garante que ocupe toda a largura */
}

/* Ajuste para os rótulos */
label {
    margin-bottom: 10px;
    font-weight: bold;
    color: #333333; /* Cor do texto */
    text-align: left; /* Alinha o texto à esquerda */
    width: 100%; /* Ocupa toda a largura */
}

/* Estilo para campos de entrada e seleção */
input, select {
    padding: 12px;
    font-size: 16px;
    border: 1px solid #ddd;
    border-radius: 6px;
    width: 100%;
    box-sizing: border-box; /* Garante que o padding não ultrapasse a largura */
    text-align: center; /* Centraliza o texto dentro do campo */
}

/* Muda a cor de fundo do campo de resultado */
input[readonly] {
    background-color: #f1f1f1;
    color: #555;
    cursor: not-allowed; /* Cursor indica que o campo não pode ser editado */
}

/* Estilo do botão */
button {
    margin-top: 20px;
    padding: 12px 24px;
    font-size: 18px;
    color: #ffffff;
    background-color: #0984e3; /* Azul vibrante */
    border: none;
    border-radius: 6px;
    cursor: pointer;
    width: 100%;
    text-align: center;
    transition: background-color 0.3s ease; /* Transição suave para hover */
}

/* Efeito ao passar o mouse no botão */
button:hover {
    background-color: #074cad; /* Azul mais escuro */
}

/* Texto centralizado e espaçamento */
form h1 {
    text-align: center;
    margin-bottom: 25px;
    color: #333;
    font-size: 1.8em;
    font-weight: bold;
}
</style>
